{"ast":null,"code":"var _jsxFileName = \"/Users/georgie/Desktop/Repositories/ReactApps/reactJest/src/App.js\";\nimport React, { Component } from 'react';\nimport './app.scss';\nimport Header from './components/header';\nimport Headline from './components/headline';\nimport Randoms from './components/randomPerson';\nimport SharedButton from './components/button';\nimport Certifications from './components/certifications';\nimport ListItem from './components/listItem';\nimport { connect } from 'react-redux';\nimport { Provider } from 'react-redux';\nimport { store } from './createStore';\nimport { fetchPosts } from './actions';\nimport './app.scss';\nimport { Router, Route, Switch } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nconst tempArr = [{\n  fName: 'Geo',\n  lName: 'Doe',\n  email: 'geoDoe123@gmail.com',\n  location: 'Dayton',\n  onlineStatus: true\n}];\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Data: [{\n        title: 'React'\n      }, {\n        title: '.NET'\n      }, {\n        title: 'Angular'\n      }, {\n        title: 'JavaScript in general'\n      }, {\n        title: 'Ruby on Rails'\n      }, {\n        title: 'C# in general'\n      }, {\n        title: 'Linux command line/Git'\n      }]\n    }; // this.fetch = this.fetch.bind(this);\n  } // fetch() {\n  //   this.props.fetchPosts();\n  // }\n  // skillToggle = () => {\n  //   const doesShow = this.state.showSkills;\n  //   this.setState({ showSkills: !doesShow });\n  // };\n\n\n  render() {\n    const props = this.props.props;\n    const configButton = {\n      buttonText: 'TDD Button- Get Posts',\n      emitEvent: this.fetch\n    };\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))), React.createElement(SharedButton, Object.assign({}, configButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"headline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Headline, {\n      header: \"Rand-o Pers-O (These people are random)\",\n      desc: \"Click 'Next' for random people\",\n      tempArr: tempArr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Randoms, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Certifications, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/certifications\",\n      exact: true,\n      component: Certifications,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n}; // const ConnectedApp = connect => (mapStateToProps, { fetchPosts })(App);\n// export default ConnectedApp(\n//   <Provider store={store}>\n//     <ConnectedApp />\n//   </Provider>\n// );\n\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(App);","map":{"version":3,"sources":["/Users/georgie/Desktop/Repositories/ReactApps/reactJest/src/App.js"],"names":["React","Component","Header","Headline","Randoms","SharedButton","Certifications","ListItem","connect","Provider","store","fetchPosts","Router","Route","Switch","BrowserRouter","tempArr","fName","lName","email","location","onlineStatus","App","constructor","props","state","Data","title","render","configButton","buttonText","emitEvent","fetch","mapStateToProps","posts"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './app.scss';\nimport Header from './components/header';\nimport Headline from './components/headline';\nimport Randoms from './components/randomPerson';\nimport SharedButton from './components/button';\nimport Certifications from './components/certifications';\nimport ListItem from './components/listItem';\nimport { connect } from 'react-redux';\nimport { Provider } from 'react-redux';\nimport { store } from './createStore';\nimport { fetchPosts } from './actions';\nimport './app.scss';\nimport { Router, Route, Switch } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst tempArr = [\n  {\n    fName: 'Geo',\n    lName: 'Doe',\n    email: 'geoDoe123@gmail.com',\n    location: 'Dayton',\n    onlineStatus: true\n  }\n];\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Data: [\n        {\n          title: 'React'\n        },\n        {\n          title: '.NET'\n        },\n        {\n          title: 'Angular'\n        },\n        {\n          title: 'JavaScript in general'\n        },\n        {\n          title: 'Ruby on Rails'\n        },\n        {\n          title: 'C# in general'\n        },\n        {\n          title: 'Linux command line/Git'\n        }\n      ]\n    };\n    // this.fetch = this.fetch.bind(this);\n  }\n\n  // fetch() {\n  //   this.props.fetchPosts();\n  // }\n\n  // skillToggle = () => {\n  //   const doesShow = this.state.showSkills;\n  //   this.setState({ showSkills: !doesShow });\n  // };\n\n  render() {\n    const { props } = this.props;\n\n    const configButton = {\n      buttonText: 'TDD Button- Get Posts',\n      emitEvent: this.fetch\n    };\n\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Header>\n            <nav>\n              <ul>\n                <li></li>\n              </ul>\n            </nav>\n          </Header>\n          <SharedButton {...configButton} />\n          {/* <h3>Array.map() of some of my main skills:</h3>\n          {this.state.Data.map((item, index) => (\n            <p>{item.title}</p>\n          ))} */}\n          <section className=\"headline\">\n            <Headline\n              header=\"Rand-o Pers-O (These people are random)\"\n              desc=\"Click 'Next' for random people\"\n              tempArr={tempArr}\n            />\n            <Randoms />\n          </section>\n          <Certifications />\n          <Route path=\"/certifications\" exact component={Certifications} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\n// const ConnectedApp = connect => (mapStateToProps, { fetchPosts })(App);\n\n// export default ConnectedApp(\n//   <Provider store={store}>\n//     <ConnectedApp />\n//   </Provider>\n// );\n\nexport default connect(\n  mapStateToProps,\n  { fetchPosts }\n)(App);\n"]},"metadata":{},"sourceType":"module"}