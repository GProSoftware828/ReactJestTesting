{"ast":null,"code":"var _jsxFileName = \"/Users/georgie/Desktop/Repositories/ReactApps/reactJest/src/App.js\";\nimport React, { Component } from 'react';\nimport './app.scss';\nimport Header from './components/header';\nimport Headline from './components/headline';\nimport Randoms from './components/randomPerson';\nimport SharedButton from './components/button';\nimport Certifications from './components/certifications';\nimport ListItem from './components/listItem';\nimport { connect } from 'react-redux'; //import { Provider } from 'react-redux';\n//import { store } from './createStore';\n\nimport { fetchPosts } from './actions';\nimport './app.scss';\nconst tempArr = [{\n  fName: 'Geo',\n  lName: 'Doe',\n  email: 'geoDoe123@gmail.com',\n  location: 'Dayton',\n  onlineStatus: true\n}];\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.fetch = this.fetch.bind(this);\n  }\n\n  fetch() {\n    this.props.fetchPosts();\n  }\n\n  render() {\n    const props = this.props.props;\n    const configButton = {\n      buttonText: 'TDD Button- Get Posts',\n      emitEvent: this.fetch\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(SharedButton, Object.assign({}, configButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), posts.length > 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, posts.map((post, index) => {\n      const title = post.title,\n            body = post.body;\n      const configListItem = {\n        title,\n        desc: body\n      };\n      return React.createElement(ListItem, Object.assign({\n        key: index\n      }, configListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    })), React.createElement(\"section\", {\n      className: \"headline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Headline, {\n      header: \"Rand-o Pers-O (These people are random)\",\n      desc: \"Click 'Next' for random people\",\n      tempArr: tempArr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Randoms, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Certifications, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n/*const ConnectedApp = connect(\n  mapStateToProps,\n  { fetchPosts }\n)(App);\n\nexport default ConnectedApp(\n  <Provider store={store}>\n    <ConnectedApp />\n  </Provider>\n);*/\n\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(App);","map":{"version":3,"sources":["/Users/georgie/Desktop/Repositories/ReactApps/reactJest/src/App.js"],"names":["React","Component","Header","Headline","Randoms","SharedButton","Certifications","ListItem","connect","fetchPosts","tempArr","fName","lName","email","location","onlineStatus","App","constructor","props","fetch","bind","render","configButton","buttonText","emitEvent","posts","length","map","post","index","title","body","configListItem","desc","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAO,YAAP;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,KAAK,EAAE,KAFT;AAGEC,EAAAA,KAAK,EAAE,qBAHT;AAIEC,EAAAA,QAAQ,EAAE,QAJZ;AAKEC,EAAAA,YAAY,EAAE;AALhB,CADc,CAAhB;AAUA,OAAO,MAAMC,GAAN,SAAkBf,SAAlB,CAA4B;AACjCgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAEDD,EAAAA,KAAK,GAAG;AACN,SAAKD,KAAL,CAAWT,UAAX;AACD;;AAEDY,EAAAA,MAAM,GAAG;AAAA,UACCH,KADD,GACW,KAAKA,KADhB,CACCA,KADD;AAGP,UAAMI,YAAY,GAAG;AACnBC,MAAAA,UAAU,EAAE,uBADO;AAEnBC,MAAAA,SAAS,EAAE,KAAKL;AAFG,KAArB;AAKA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD,oBAAkBG,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,EAGGG,KAAK,CAACC,MAAN,GAAe,CAAf,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAA,YAClBC,KADkB,GACFF,IADE,CAClBE,KADkB;AAAA,YACXC,IADW,GACFH,IADE,CACXG,IADW;AAE1B,YAAMC,cAAc,GAAG;AACrBF,QAAAA,KADqB;AAErBG,QAAAA,IAAI,EAAEF;AAFe,OAAvB;AAIA,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEF;AAAf,SAA0BG,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAPA,CADH,CAJJ,EAeE;AAAS,MAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAC,yCADT;AAEE,MAAA,IAAI,EAAC,gCAFP;AAGE,MAAA,OAAO,EAAEtB,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAfF,EAuBE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF;AA2BD;;AA7CgC;;AA+CnC,MAAMwB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLV,IAAAA,KAAK,EAAEU,KAAK,CAACV;AADR,GAAP;AAGD,CAJD;AAMA;;;;;;;;;;;;AAWA,eAAejB,OAAO,CACpB0B,eADoB,EAEpB;AAAEzB,EAAAA;AAAF,CAFoB,CAAP,CAGbO,GAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './app.scss';\nimport Header from './components/header';\nimport Headline from './components/headline';\nimport Randoms from './components/randomPerson';\nimport SharedButton from './components/button';\nimport Certifications from './components/certifications';\nimport ListItem from './components/listItem';\nimport { connect } from 'react-redux';\n//import { Provider } from 'react-redux';\n//import { store } from './createStore';\nimport { fetchPosts } from './actions';\nimport './app.scss';\n\nconst tempArr = [\n  {\n    fName: 'Geo',\n    lName: 'Doe',\n    email: 'geoDoe123@gmail.com',\n    location: 'Dayton',\n    onlineStatus: true\n  }\n];\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.fetch = this.fetch.bind(this);\n  }\n\n  fetch() {\n    this.props.fetchPosts();\n  }\n\n  render() {\n    const { props } = this.props;\n\n    const configButton = {\n      buttonText: 'TDD Button- Get Posts',\n      emitEvent: this.fetch\n    };\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <SharedButton {...configButton} />\n        {posts.length > 0 && (\n          <div>\n            {posts.map((post, index) => {\n              const { title, body } = post;\n              const configListItem = {\n                title,\n                desc: body\n              };\n              return <ListItem key={index} {...configListItem} />;\n            })}\n          </div>\n        )}\n        <section className=\"headline\">\n          <Headline\n            header=\"Rand-o Pers-O (These people are random)\"\n            desc=\"Click 'Next' for random people\"\n            tempArr={tempArr}\n          />\n          <Randoms />\n        </section>\n        <Certifications />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\n/*const ConnectedApp = connect(\n  mapStateToProps,\n  { fetchPosts }\n)(App);\n\nexport default ConnectedApp(\n  <Provider store={store}>\n    <ConnectedApp />\n  </Provider>\n);*/\n\nexport default connect(\n  mapStateToProps,\n  { fetchPosts }\n)(App);\n"]},"metadata":{},"sourceType":"module"}